name: Release

on:
  workflow_dispatch:
    inputs:
      crate:
        description: Rust crate to publish
        type: choice
        options:
          - bh-jws-utils
          - bh-uri-utils
          - bherror
          - bhmdoc
          - bhx5chain
      version:
        description: SemVer identifier of a version
        type: string
        required: true
      dry-run:
        description: 'Dry-run on/off'
        type: boolean
        default: true
      ref:
        description: Git ref to checkout. Uses github.ref if unspecified.
        type: string
        default: ''

permissions:
  contents: write

concurrency:
  group: release-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CRATE: ${{ inputs.crate }}
  CRATE_VERSION: ${{ inputs.version }}
  DRY_RUN_FLAG: ${{ inputs.dry-run && '--dry-run' || '' }}
  GIT_CHECKOUT_REF: ${{ inputs.ref != '' && inputs.ref || github.ref }}
  RELEASE_TAG: ${{ inputs.crate }}/v${{ inputs.version }}
  RUST_VERSION: 'stable'

jobs:
  release-validations:
    runs-on: ubuntu-latest
    outputs:
      changelog-entry: ${{ steps.validate-release.outputs.changelog-entry }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.GIT_CHECKOUT_REF }}

      - name: Check if on Main Branch for a Live-run
        if: ${{ !inputs.dry-run }}
        run: git merge-base --is-ancestor "${GIT_CHECKOUT_REF}" origin/main

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@c5a29ddb4d9d194e7c84ec8c3fba61b1c31fee8c
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Validate the Release
        id: validate-release
        run: ./.github/scripts/release_validations.sh -c "${CRATE}" -v "${CRATE_VERSION}" -C

  ci:
    uses: ./.github/workflows/ci.yaml
    needs: [release-validations]
    with:
      # env expression context is not available here
      crate: ${{ inputs.CRATE }}
      ref: ${{ inputs.ref != '' && inputs.ref || github.ref }}

  publish:
    runs-on: ubuntu-latest
    needs:
      - ci
      - release-validations
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.GIT_CHECKOUT_REF }}

      - name: Tag the Release
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -afm "Release ${RELEASE_TAG}" "${RELEASE_TAG}" "${GIT_CHECKOUT_REF}"
          git push ${DRY_RUN_FLAG} origin "${RELEASE_TAG}"

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@c5a29ddb4d9d194e7c84ec8c3fba61b1c31fee8c
        with:
          toolchain: ${{ env.RUST_VERSION }}

      - name: Publish the Crate
        run: cargo publish ${DRY_RUN_FLAG} -p "${CRATE}"
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_IO_TOKEN }}

      - name: Create the GH Release
        if: ${{ !inputs.dry-run }}
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          release_name: ${{ env.RELEASE_TAG }}
          body: |
            Check out the full [CHANGELOG.md](https://github.com/blockhousetech/eudi-rust-core/blob/main/${{ inputs.crate }}/CHANGELOG.md).

            ${{ needs.release-validations.outputs.changelog-entry }}"
